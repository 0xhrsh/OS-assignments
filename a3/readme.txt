# Assignment 3
To run the scheduler simulation you can just run ```chmod +x run.sh && ./run.sh``` or you can manually run as described below.

To run, you'll need:
- Input file (format specified below) [Note: The input file can be generated by running part a, please read how to compile and run part ```a.cpp```, below]
- To compile and run the file ```B18CSE016.cpp``` file, read the instructions in part b.

PS: You can find the compilation graphs in ```graphs.pdf``` and individual graphs in the ```/graphs``` folder.
## Part a:

You can compile part a using: ```g++ a.cpp```.

To run part a, you have to provide n in cmd line argument. For example: ```./a.out 5```

This will create the appropriate output in file ```in.txt```.

The output will in the format of:
```
n
arrival_time1 cpu_burst1 priority1
arrival_time2 cpu_burst2 priority2
so on...
```


## Part b:

you can compile part b using ```g++ B18CSE016.cpp -o scheduler```.

You can run using the command ```./scheduler < in.txt > out.txt```.

You will get the appropriate output in the file ```out.txt```.

## Part c:
run: ```python3 c.py```

This will:
- Create 10 output files each with n = 10/20/30/40/50 in the folder ```data/```.
- Run the scheduler program for each of the files in the folder ```data/```.
- Create the output graphs in the folder ```graphs/```.

